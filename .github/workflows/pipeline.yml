name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
#
#jobs:
#  simple_deployment_pipeline:
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#      - run: npm install
#      - run: npm run eslint
#      - run: npm run test
#      - run: npm run build
#
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v4
#        with:
#          node-version: lts/*
#      - name: Install dependencies
#        run: npm ci
#      - name: Install Playwright Browsers
#        run: npx playwright install --with-deps
#      - name: Run Playwright tests
#        run: npx playwright test
#      - uses: actions/upload-artifact@v4
#        if: ${{ !cancelled() }}
#        with:
#          name: playwright-report
#          path: playwright-report/
#          retention-days: 30
#
#      - name: Trigger deployment
#        uses: sws2apps/render-deployment@main #consider using pin for dependabot auto update
#        if: ${{ github.event_name == 'push' }}
#        with:
#          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
#          apiKey: ${{ secrets.RENDER_API_KEY }}
#          multipleDeployment: false #optional, default true
#
#  tag_release:
#    needs: [simple_deployment_pipeline]
#    runs-on: ubuntu-20.04
#    permissions:
#      contents: write
#    steps:
#    - uses: actions/checkout@v4
#      with:
#        fetch-depth: '0'
#
#    - name: Bump version and push tag
#      uses: anothrNick/github-tag-action@1.71.0
#      if: ${{ github.event_name == 'push' }}
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        DEFAULT_BUMP: patch
#

env:
  COMMIT_MESSAGES: ${{ join(github.event.commits.*.message) }}
  CONDITION: ${{ !contains( github.env.COMMIT_MESSAGES, '#skip') }}

jobs:
  a_test_job:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES2: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES2"
      - name: test skip
        #run: echo "$CONDITION"
        if: env.CONDITION
        run: echo "skip not found"
      